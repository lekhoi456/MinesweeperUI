
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 * Creates new form Score board
 * @author KhoiLQCE130023
 */
public class ScoreBoard extends javax.swing.JFrame {

    // initiations
    public ScoreBoard(int score, int dif) throws Exception {
        initComponents();
        this.setLocationRelativeTo(null);
        Image favicon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/favicon.png"));
        this.setIconImage(favicon);
        this.setVisible(true);
        this.score = score;
        this.dif = dif;
        txtScore.setText(String.valueOf(score));
        loadData();
        showRank();
    }

    // set title
    public void setTitle(String txtTitle) {
        this.txtTitle.setText(String.valueOf(txtTitle));
    }

    // set score
    public void setScore(int score) {
        this.txtScore.setText(String.valueOf(score));
    }

    // set difficult
    public void setDiff(int dif) {
        this.dif = dif;
    }

    // set time with time format
    public void setTime(String txtTime) {
        this.txtTime.setText(String.valueOf(txtTime));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTitle = new javax.swing.JLabel();
        bttClose = new javax.swing.JLabel();
        txtUserId = new javax.swing.JTextField();
        bttSubmit = new javax.swing.JLabel();
        txtTime = new javax.swing.JLabel();
        txtScore = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaContent = new javax.swing.JTextArea();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtTitle.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        txtTitle.setForeground(new java.awt.Color(255, 255, 255));
        txtTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(txtTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 34, 390, 40));

        bttClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close.png"))); // NOI18N
        bttClose.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bttClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bttCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bttCloseMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bttCloseMousePressed(evt);
            }
        });
        getContentPane().add(bttClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(454, 0, -1, -1));

        txtUserId.setBackground(new java.awt.Color(200, 200, 200));
        txtUserId.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        txtUserId.setForeground(new java.awt.Color(255, 255, 255));
        txtUserId.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtUserId.setText("Yourname");
        txtUserId.setAlignmentX(0.0F);
        txtUserId.setAlignmentY(0.0F);
        txtUserId.setBorder(null);
        txtUserId.setSelectionColor(new java.awt.Color(72, 133, 248));
        txtUserId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserIdActionPerformed(evt);
            }
        });
        getContentPane().add(txtUserId, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 345, 240, 30));

        bttSubmit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bttSubmit.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        bttSubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttSubmitMouseClicked(evt);
            }
        });
        getContentPane().add(bttSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 350, 90, 20));

        txtTime.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        txtTime.setForeground(new java.awt.Color(255, 255, 255));
        txtTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtTime.setText("00:00");
        getContentPane().add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, -1, 30));

        txtScore.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        txtScore.setForeground(new java.awt.Color(255, 255, 255));
        txtScore.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtScore.setText("0");
        getContentPane().add(txtScore, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, 50, 30));

        jPanel1.setBackground(new java.awt.Color(127, 127, 127));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("");
        jPanel1.setAlignmentX(0.0F);
        jPanel1.setAlignmentY(0.0F);
        jPanel1.setAutoscrolls(true);
        jPanel1.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        jScrollPane1.setBackground(new java.awt.Color(127, 127, 127));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtaContent.setEditable(false);
        txtaContent.setBackground(new java.awt.Color(200, 200, 200));
        txtaContent.setColumns(20);
        txtaContent.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtaContent.setForeground(new java.awt.Color(255, 255, 255));
        txtaContent.setRows(2);
        txtaContent.setBorder(null);
        jScrollPane1.setViewportView(txtaContent);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 360, 120));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/score.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttSubmitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttSubmitMouseClicked
        try {
            User account = new User(txtUserId.getText(), Integer.parseInt(txtScore.getText()));
            account = us.checkUser(account);
            if (account == null) {
                us.addUser(new User(txtUserId.getText(), Integer.parseInt(txtScore.getText())));
                return;
            }
            int tmp = Integer.parseInt(txtScore.getText());
            if (tmp <= account.getScore()) {
                return;
            }

            // Display login successfully notification
            us.changeScore(txtUserId.getText(), Integer.parseInt(txtScore.getText()));

            this.setVisible(false);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(ScoreBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bttSubmitMouseClicked

    private void bttCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttCloseMouseClicked
        Menu menu = new Menu();
        menu.setVisible(true);
        menu.pack();
        menu.setLocationRelativeTo(null);
        menu.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_bttCloseMouseClicked

    private void bttCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttCloseMouseEntered
        bttClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close_hover.png")));
    }//GEN-LAST:event_bttCloseMouseEntered

    private void bttCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttCloseMouseExited
        bttClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close.png")));
    }//GEN-LAST:event_bttCloseMouseExited

    private void bttCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttCloseMousePressed

    }//GEN-LAST:event_bttCloseMousePressed

    private int xCoordinate, yCoordinate;
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        xCoordinate = evt.getX();
        yCoordinate = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        this.setLocation(evt.getXOnScreen() - xCoordinate, evt.getYOnScreen() - yCoordinate);
    }//GEN-LAST:event_formMouseDragged

    private void txtUserIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserIdActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            @Override
//            public void run() {
//                try {
//                    new ScoreBoard().setVisible(true);
//                } catch (Exception ex) {
//                    Logger.getLogger(ScoreBoard.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//    }
    private int dif;
    private int score;
    private ArrayList<User> users;
    private static UserManagement us;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel bttClose;
    private javax.swing.JLabel bttSubmit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel txtScore;
    private javax.swing.JLabel txtTime;
    private javax.swing.JLabel txtTitle;
    public javax.swing.JTextField txtUserId;
    private javax.swing.JTextArea txtaContent;
    // End of variables declaration//GEN-END:variables

    private void showRank() {
        String rank = checkRank(Integer.parseInt(txtScore.getText()));
        txtaContent.setText(rank);
        
    }

    private String checkRank(int score) {
        boolean isRank = false;
        String s = "";
        int size;
        ArrayList<User> users = us.getUsers();
        if (users.size() < 5) {
            size = users.size();
        } else {
            size = 5;
        }
        for (int i = 0; i < size; i++) {
            if (!isRank && score >= users.get(i).getScore()) {
                s += String.format("%-50s%-3d\n", "Yourname", score);
                isRank = true;
            }
            s += String.format("%-50s%-3d\n", users.get(i).getUserId(), users.get(i).getScore());
        }
        if (!isRank && size < 5) {
            s += String.format("%-50s%-3d\n", "Yourname", score);
        }
        return s;
    }

    private void loadData() {
        String fileName;
        if (dif == 0) {
            fileName = "easy";
        } else if (dif == 1) {
            fileName = "normal";
        } else {
            fileName = "expert";
        }

        try {
            us = new UserManagement("src/data/" + fileName + ".txt");
            us.loadUsers();
        } catch (Exception ex) {
            Logger.getLogger(ScoreBoard.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
